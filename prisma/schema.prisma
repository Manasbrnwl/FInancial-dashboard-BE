generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["market_data", "periodic_market_data"]
}

model bse_equity {
  id         Int       @id @default(autoincrement())
  symbol_id  String?
  symbol     String    @db.VarChar(50)
  date       DateTime  @db.Date
  open       Float?
  high       Float?
  low        Float?
  close      Float?
  volume     String?
  oi         String?
  exchange   String?   @db.VarChar(10)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @updatedAt @db.Timestamp(6)

  @@unique([symbol, date], map: "bse_equity_symbol_date_unique")
  @@index([symbol, date], map: "idx_bse_eq_symbol_date")
  @@schema("market_data")
}

model nse_equity {
  id         Int       @id @default(autoincrement())
  symbol_id  String?
  symbol     String    @db.VarChar(50)
  date       DateTime  @db.Date
  open       Float?
  high       Float?
  low        Float?
  close      Float?
  volume     String?
  oi         String?
  exchange   String?   @db.VarChar(10)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @updatedAt @db.Timestamp(6)

  @@unique([symbol, date], map: "nse_equity_symbol_date_unique")
  @@index([symbol, date], map: "idx_nse_eq_symbol_date")
  @@schema("market_data")
}

model nse_futures {
  id          Int       @id @default(autoincrement())
  symbol_id   String?
  symbol      String    @db.VarChar(100)
  date        DateTime  @db.Date
  open        Float?
  high        Float?
  low         Float?
  close       Float?
  volume      String?
  oi          String?
  underlying  String?   @db.VarChar(50)
  expiry_date DateTime? @db.Date
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  updated_at  DateTime? @updatedAt @db.Timestamp(6)

  @@unique([symbol, date, underlying, expiry_date], map: "nse_futures_symbol_date_underlying_expir_unique")
  @@index([symbol, date], map: "idx_nse_fut_symbol_date")
  @@schema("market_data")
}

model nse_options {
  id          Int       @id @default(autoincrement())
  symbol_id   String?
  symbol      String    @db.VarChar(100)
  date        DateTime  @db.Date
  open        Float?
  high        Float?
  low         Float?
  close       Float?
  volume      String?
  oi          String?
  underlying  String?   @db.VarChar(50)
  expiry_date DateTime? @db.Date
  strike      String?
  option_type String?   @db.VarChar(2)
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  updated_at  DateTime? @updatedAt @db.Timestamp(6)

  @@unique([symbol, date, underlying, expiry_date, option_type], map: "nse_options_symbol_date_underlying_expiry_unique")
  @@index([strike, date], map: "idx_nse_opt_strike_date")
  @@index([symbol, date], map: "idx_nse_opt_symbol_date")
  @@schema("market_data")
}

model instrument_lists {
  id              Int                  @id @default(autoincrement())
  exchange        String               @db.VarChar(100)
  instrument_type String               @db.VarChar(100)
  created_at      DateTime?            @default(now()) @db.Timestamp(6)
  updated_at      DateTime?            @updatedAt @db.Timestamp(6)
  intrumentExpiry instruments_expiry[]

  @@unique([exchange, instrument_type], map: "instrument_lists_exchange_instrument_type_unique")
  @@index([exchange, instrument_type], map: "idx_instrument_lists_exchange_instrument_type")
  @@schema("market_data")
}

model instruments_expiry {
  id             Int               @id @default(autoincrement())
  instrument_id  Int?
  expiry_date    DateTime?         @db.Date
  created_at     DateTime?         @default(now()) @db.Timestamp(6)
  updated_at     DateTime?         @updatedAt @db.Timestamp(6)
  segment        String?           @db.VarChar(5)
  instrumentList instrument_lists? @relation(fields: [instrument_id], references: [id])

  @@unique([instrument_id, expiry_date, segment], map: "instruments_expiry_instrument_id_expiry_date_unique")
  @@index([instrument_id, expiry_date], map: "idx_instruments_expiry_instrument_id_expiry_date")
  @@schema("market_data")
}

model bhavcopy_uploaded {
  id         Int       @id @default(autoincrement())
  date       DateTime  @db.Date
  count      Int
  segment    String?   @db.VarChar(100)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @updatedAt @db.Timestamp(6)

  @@unique([date, count, segment], map: "bhavcopy_date_count_segment_unique")
  @@index([date, count, segment], map: "idx_bhavcopy_date_count_segment")
  @@schema("market_data")
}

model dates_missed {
  id         Int       @id @default(autoincrement())
  date       DateTime  @db.Date
  day        String?   @db.VarChar(100)
  segment    String?   @db.VarChar(100)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @updatedAt @db.Timestamp(6)

  @@unique([date, segment], map: "dates_missed_date_segment_unique")
  @@index([date, segment], map: "idx_dates_missed_date_segment")
  @@schema("market_data")
}

model symbols_list {
  id            Int       @id @default(autoincrement())
  instrument_id Int
  symbol        String    @db.VarChar(100)
  created_at    DateTime? @default(now()) @db.Timestamp(6)
  updated_at    DateTime? @updatedAt @db.Timestamp(6)
  segment       String?   @db.VarChar(5)
  expiry_date   DateTime? @db.Date

  @@unique([instrument_id, symbol], map: "instrument_symbol_unique")
  @@index([instrument_id, symbol], map: "idx_instrument_symbol")
  @@schema("market_data")
}

model ohlcDataNSE {
  id           BigInt   @id @default(autoincrement())
  instrumentId Int
  open         String
  high         String
  low          String
  close        String
  volume       String?  @default("0")
  oi           String?  @default("0")
  time         DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([instrumentId, time], map: "uniq_data_nse")
  @@index([instrumentId], map: "idx_instrumentId_nse")
  @@index([time], map: "idx_time_nse")
  @@schema("periodic_market_data")
}

model ohlcEQDataBSE {
  id           BigInt   @id @default(autoincrement())
  instrumentId BigInt
  open         String
  high         String
  low          String
  close        String
  volume       String?  @default("0")
  oi           String?  @default("0")
  time         DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([instrumentId, time], map: "uniq_data_bse")
  @@index([instrumentId], map: "idx_instrumentId_bse")
  @@index([time], map: "idx_time_bse")
  @@schema("periodic_market_data")
}

model ticksDataNSEEQ {
  id           BigInt   @id @default(autoincrement())
  instrumentId Int
  ltp          String
  volume       String?  @default("0")
  oi           String?  @default("0")
  bid          String?  @default("0")
  bidqty       String?  @default("0")
  ask          String?  @default("0")
  askqty       String?  @default("0")
  time         DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime

  @@unique([instrumentId, time], map: "uniq_data_nse_eq")
  @@index([instrumentId], map: "idx_instrumentId_nse_eq")
  @@index([time], map: "idx_time_nse_eq")
  @@schema("periodic_market_data")
}

model ticksDataNSEFUT {
  id           BigInt   @id @default(autoincrement())
  instrumentId Int
  ltp          String
  volume       String?  @default("0")
  oi           String?  @default("0")
  bid          String?  @default("0")
  bidqty       String?  @default("0")
  ask          String?  @default("0")
  askqty       String?  @default("0")
  time         DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime

  @@unique([instrumentId, time], map: "uniq_data_nse_fut")
  @@index([instrumentId], map: "idx_instrumentId_nse_fut")
  @@index([time], map: "idx_time_nse_fut")
  @@schema("periodic_market_data")
}

model ticksDataNSEOPT {
  id           BigInt   @id @default(autoincrement())
  instrumentId Int
  ltp          String
  volume       String?  @default("0")
  oi           String?  @default("0")
  bid          String?  @default("0")
  bidqty       String?  @default("0")
  ask          String?  @default("0")
  askqty       String?  @default("0")
  time         DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime

  @@unique([instrumentId, time], map: "uniq_data_nse_opt")
  @@index([instrumentId], map: "idx_instrumentId_nse_opt")
  @@index([time], map: "idx_time_nse_opt")
  @@schema("periodic_market_data")
}
